#!/bin/sh

help::parse_help(){
  case "${1}" in
    create)   help::create  ;;
    console)  help::console ;;
    destroy)  help::destroy ;;
    edit)     help::edit    ;;
    nat)      help::nat     ;;
    rdr)      help::rdr     ;;
    *)        util::usage   ;;
  esac
}

help::create(){
  cat <<EOF
Usage:  jailer create  [-D] [-r version | -s snap] [-n] [-d domain]
                       [-b bridge] [-t eb|ng] [-g gateway -m netmask] [-a addr] [name]
Options:
  -D                  : Dry run
  -r version          : FreeBSD-version as base of Jail; defaults to uname -r
  -s snapshot         : Clone from snapshot as base of Jail
  -n                  : Make Jail less noisy
  -d domain           : Set Jail's domain
  -t network_type     : Network Type; defaults to none (inherit), can be eb (epair/bridge)
  -b bridge|interface : Attach to interface (if inherit) or bridge (if epair/bridge)
  -g gateway          : Set Jail's gateway (ignored if inherit, defaults to bridge IP if eb)
  -m netmask          : Netmask (if specifying a Gateway)
  -a addr             : Use addr as address or 'dhcp' to use dhclient in Jail
EOF
  exit 0
}

help::console(){
  cat <<EOF
Usage: jailer console jail
  Open \$SHELL inside jail
EOF
  exit 0
}

help::destroy(){
  cat <<EOF
Usage: jailer destroy jail
  Destroys jail; Might fail is a resource is busy
EOF
  exit 0
}

help::edit(){
  cat <<EOF
Usage: jailer edit jail
  Respects \$EDITOR
EOF
  exit 0
}

help::nat(){
  cat <<EOF
Usage jailer nat ...
  list [jail]
  add -i interface [ -a my.second.ip.addr ] jail
  del jail
EOF
  exit 0
}

help::rdr(){
  cat <<EOF
Usage: jailer rdr ...
  list [jail]
  add  -i interface [ -a my.second.ip.addr ]
                    [ -p tcp|udp -r recvport [ -d destport ] ] jail
  del  [ -i rule_index | -f ] jail
EOF
  exit 0
}
